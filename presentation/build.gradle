//apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'                   // Realm needs to be before Kotlin or the build will fail
apply plugin: 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 33
    flavorDimensions "analytics"

    defaultConfig {
        applicationId "com.text.messages.sms.emoji"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        setProperty("archivesBaseName", "Messages_$versionName.$versionCode")
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        congfig {
            storeFile file('D:/jks_files/com.text.messages.sms.emoji.jks')
            storePassword 'com.text.messages.sms.emoji'
            keyAlias = 'key0'
            keyPassword 'com.text.messages.sms.emoji'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.congfig
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    productFlavors {
        withAnalytics { dimension "analytics" }
        noAnalytics { dimension "analytics" }
    }

    buildFeatures {
        viewBinding = true
    }

//    if (System.getenv("CI") == "true") {
//        signingConfigs.release.storeFile = file("../keystore")
//        signingConfigs.release.storePassword = System.getenv("keystore_password")
//        signingConfigs.release.keyAlias = System.getenv("key_alias")
//        signingConfigs.release.keyPassword = System.getenv("key_password")
//    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/layouts',
                    'src/main/res/layouts/admob'
            ]
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

}

androidExtensions {
    experimental = true
}

configurations {
    noAnalyticsDebug
    noAnalyticsRelease
    withAnalyticsDebug
    withAnalyticsRelease
}

dependencies {

    implementation 'androidx.multidex:multidex:2.0.1'

    // lifecycle
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // androidx
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
//    implementation "androidx.emoji:emoji-appcompat:$androidx_emoji_version"
    implementation "androidx.emoji2:emoji2:$androidx_emoji_version"
    implementation "androidx.emoji2:emoji2-views:$androidx_emoji_version"
    implementation "androidx.viewpager2:viewpager2:$androidx_viewpager_version"
    implementation "com.google.android.material:material:$material_version"

    // conductor
    implementation "com.bluelinelabs:conductor:$conductor_version"
    implementation "com.bluelinelabs:conductor-archlifecycle:$conductor_version"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // exoplayer
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    implementation("com.google.android.exoplayer:exoplayer-ui:$exoplayer_version", {
        exclude group: "com.android.support", module: "support-media-compat"
    })

    // rxbinding
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxbinding_version"

    // autodispose
    implementation "com.uber.autodispose:autodispose-android-archcomponents:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-test:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-android:$autodispose_version"
    implementation "com.uber.autodispose:autodispose:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-lifecycle:$autodispose_version"

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly "javax.annotation:jsr250-api:1.0"

    // ezvcard
    implementation('com.googlecode.ez-vcard:ez-vcard:0.11.3', {
        exclude group: "org.jsoup", module: "jsoup"
        exclude group: "org.freemarker", module: "freemarker"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
    })

    // realm
    implementation("io.realm:android-adapters:$realm_adapters_version") { transitive = false }
    kapt "io.realm:realm-annotations:$realm_version"
    kapt "io.realm:realm-annotations-processor:$realm_version"

    // rxjava
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "com.uber.rxdogtag:rxdogtag:$rxdogtag_version"
    implementation "com.uber.rxdogtag:rxdogtag-autodispose:$rxdogtag_version"
    implementation 'com.android.installreferrer:installreferrer:2.2'

    // testing
    /*androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: "com.android.support", module: "support-annotations"
    })
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "androidx.test:runner:$androidx_testrunner_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"*/

    // moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    debugImplementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kaptRelease "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
//    kaptTest "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$coroutines_version"

    implementation "com.github.chrisbanes:PhotoView:2.0.0"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rx_preferences_version"
    implementation "com.google.android:flexbox:1.1.1"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "me.leolin:ShortcutBadger:1.1.22"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(":android-smsmms")
    implementation project(":common")
    implementation project(':data')
    implementation project(':domain')
    implementation project(':appModule')
    withAnalyticsImplementation "com.android.billingclient:billing:$billing_version"
    withAnalyticsImplementation "com.android.billingclient:billing-ktx:$billing_version"
    noAnalyticsDebug project(path: ':data', configuration: 'noAnalyticsDebug')
    noAnalyticsRelease project(path: ':data', configuration: 'noAnalyticsRelease')
    withAnalyticsDebug project(path: ':data', configuration: 'withAnalyticsDebug')
    withAnalyticsRelease project(path: ':data', configuration: 'withAnalyticsRelease')

    implementation 'com.makeramen:roundedimageview:2.3.0'

    //ads
    implementation 'com.google.android.gms:play-services-ads:21.4.0'
    implementation 'com.facebook.android:audience-network-sdk:6.11.0'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.3.2')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //One Signal
    //implementation 'com.onesignal:OneSignal:[4.0.0, 4.99.99]'

    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    implementation 'org.michaelbel:bottomsheet:1.2.3'
    implementation 'com.github.ome450901:SimpleRatingBar:1.5.1'
    implementation 'com.airbnb.android:lottie:5.2.0'
    // appmetrica
    implementation 'com.yandex.android:mobmetricalib:5.2.0'

    // If you're using Kotlin
    kapt 'com.sun.xml.bind:jaxb-core:4.0.0'
    kapt 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    kapt 'com.sun.xml.bind:jaxb-impl:4.0.0'

    // If you're using Java
    annotationProcessor 'com.sun.xml.bind:jaxb-core:4.0.0'
    annotationProcessor 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
}

//if (getGradle().getStartParameter().getTaskRequests().toString().contains("WithAnalytics")) {
//    apply plugin: 'com.google.gms.google-services'
//    apply plugin: 'com.google.firebase.crashlytics'
//}
